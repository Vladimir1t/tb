#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –æ–ø—Ä–æ—Å–Ω–∏–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü—É users
"""
import sqlite3
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))

DB_PATH = 'Backend/aggregator.db'

def migrate():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è preferences –∏ survey_completed –≤ —Ç–∞–±–ª–∏—Ü—É users"""
    try:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤
        cursor.execute("PRAGMA table_info(users)")
        columns = [column[1] for column in cursor.fetchall()]
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü preferences –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if 'preferences' not in columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 'preferences' –≤ —Ç–∞–±–ª–∏—Ü—É users...")
            cursor.execute("ALTER TABLE users ADD COLUMN preferences TEXT")
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'preferences' –¥–æ–±–∞–≤–ª–µ–Ω")
        else:
            print("‚ÑπÔ∏è  –°—Ç–æ–ª–±–µ—Ü 'preferences' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü survey_completed –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if 'survey_completed' not in columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 'survey_completed' –≤ —Ç–∞–±–ª–∏—Ü—É users...")
            cursor.execute("ALTER TABLE users ADD COLUMN survey_completed INTEGER DEFAULT 0")
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'survey_completed' –¥–æ–±–∞–≤–ª–µ–Ω")
        else:
            print("‚ÑπÔ∏è  –°—Ç–æ–ª–±–µ—Ü 'survey_completed' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        conn.commit()
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
    finally:
        if 'conn' in locals():
            conn.close()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –æ–ø—Ä–æ—Å–Ω–∏–∫–∞...")
    migrate()

