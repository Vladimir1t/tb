name: Docker Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create CI test database
        run: |
          # –£–¥–∞–ª—è–µ–º –±–æ–ª—å—à—É—é –ë–î –µ—Å–ª–∏ –æ–Ω–∞ —Å–∫–∞—á–∞–ª–∞—Å—å (–±—É–¥–µ—Ç –±–∏—Ç–∞—è)
          rm -f Backend/aggregator.db
          
          # –°–æ–∑–¥–∞–µ–º –ª–µ–≥–∫–æ–≤–µ—Å–Ω—É—é —Ç–µ—Å—Ç–æ–≤—É—é –ë–î
          python .github/create-test-db.py
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º
          echo "üìä Database info:"
          ls -lh Backend/aggregator.db
          sqlite3 Backend/aggregator.db "SELECT COUNT(*) FROM projects;"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t your-app-name .

      - name: Test Docker container
        run: |
          # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          docker run -d --name test-container -p 8000:8000 your-app-name
          sleep 15
          
          echo "üìã Container logs:"
          docker logs test-container
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
          if curl -s http://localhost:8000/health | grep -q "healthy"; then
            echo "‚úÖ Health check passed"
          else
            echo "‚ùå Health check failed"
            docker logs test-container
            exit 1
          fi
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          docker stop test-container
          docker rm test-container