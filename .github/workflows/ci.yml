name: Docker Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug - List files
        run: |
          echo "üìÅ Repository structure:"
          find . -name "*.db" -o -name "*.sqlite*" | head -20
          echo "üìÅ Backend directory:"
          ls -la Backend/ || echo "No Backend directory"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t your-app-name .

      - name: Test Docker container
        run: |
          # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          docker run -d --name test-container -p 8000:8000 your-app-name
          
          # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
          sleep 10
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
          echo "üìã Container logs:"
          docker logs test-container
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
          echo "üìÅ Files in container:"
          docker exec test-container ls -la /app/Backend/
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          if docker exec test-container curl -s http://localhost:8000/health > /dev/null 2>&1; then
            echo "‚úÖ Health check passed"
          else
            echo "‚ùå Health check failed"
            docker logs test-container
            exit 1
          fi
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          docker stop test-container
          docker rm test-container