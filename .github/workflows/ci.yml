name: Docker Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create CI test database
        run: |
          rm -f Backend/aggregator.db
          python .github/create-test-db.py
          echo "üìä Database created:"
          sqlite3 Backend/aggregator.db "SELECT COUNT(*) FROM projects;"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t your-app-name .

      - name: Test Docker container
        run: |
          # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          docker run -d --name test-container -p 8000:8000 your-app-name
          
          # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
          sleep 10
          
          echo "üìã Container logs:"
          docker logs test-container
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
          echo "üîç Testing health endpoint..."
          response=$(curl -s -w "%{http_code}" http://localhost:8000/health)
          http_code=${response: -3}
          body=${response%???}
          
          echo "Response code: $http_code"
          echo "Response body: $body"
          
          if [ "$http_code" -eq 200 ] && echo "$body" | grep -q "healthy"; then
            echo "‚úÖ Health check passed"
          else
            echo "‚ùå Health check failed"
            docker logs test-container
            exit 1
          fi
          
          # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ root endpoint
          echo "üîç Testing root endpoint..."
          if curl -s http://localhost:8000/ | grep -q "Telegram Bot"; then
            echo "‚úÖ Root endpoint working"
          else
            echo "‚ö†Ô∏è Root endpoint check failed"
          fi
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          docker stop test-container
          docker rm test-container